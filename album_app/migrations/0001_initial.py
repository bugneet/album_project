# Generated by Django 5.0 on 2024-01-23 02:13

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Board",
            fields=[
                ("board_no", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=100)),
                ("contents", models.TextField()),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("board_photo_tag", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "board",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Liked",
            fields=[
                ("likeno", models.IntegerField(primary_key=True, serialize=False)),
                ("likedate", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "liked",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PhotoTable",
            fields=[
                ("photoid", models.AutoField(primary_key=True, serialize=False)),
                ("photohash", models.CharField(max_length=50)),
                ("phototag", models.CharField(blank=True, max_length=200, null=True)),
                ("photodate", models.DateTimeField(blank=True, null=True)),
                ("uploaddate", models.DateTimeField(blank=True, null=True)),
                ("image", models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                "db_table": "photo_table",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RecommendContents",
            fields=[
                ("contents_id", models.AutoField(primary_key=True, serialize=False)),
                ("phototag", models.CharField(blank=True, max_length=50, null=True)),
                ("contents_name", models.CharField(max_length=100)),
                (
                    "contents_link",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("contents_image", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "recommend_contents",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Reply",
            fields=[
                ("rno", models.IntegerField(primary_key=True, serialize=False)),
                ("replytext", models.CharField(max_length=1000)),
                ("regdate", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "reply",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersAppUser",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
                ("user_name", models.CharField(max_length=30)),
                ("user_adress", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "users_app_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersAppUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "users_app_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersAppUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "users_app_user_user_permissions",
                "managed": False,
            },
        ),
    ]
